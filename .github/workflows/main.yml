name: Distribute debug build
on:
  push:
    tags:
      - '*'

jobs:
  distribute-debug-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run:  yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'

      - uses: actions/cache@v2
        with:
          path: ~/android/.gradle/caches
          key: ${{ runner.os }}-android-gradle-${{ hashFiles('android/**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-android-gradle-

      - run: |
          yarn bundle
          cd android
          ./gradlew assembleDebug
          ls -alh
          ls -alh app/build/outputs/apk/debug/

      - run: yarn run distribute android/app/build/outputs/apk/debug/app-debug.apk --app ${{ secrets.APP_ID }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

# @todo once uploaded to firebase, the version number is probably set?
# we can then download it back and upload it github release as well...
