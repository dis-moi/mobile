<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.1.2">

    <issue
        id="LintBaseline"
        severity="Information"
        message="1 errors/warnings were listed in the baseline file (lint-baseline.xml) but not found in the project; perhaps they have been fixed? Another possible explanation is that lint recently stopped analyzing (and including results from) dependent projects by default. You can turn this back on with `android.lintOptions.checkDependencies=true`. Unmatched issue types: LintError"
        category="Lint"
        priority="10"
        summary="Baseline Issues"
        explanation="Lint can be configured with a &quot;baseline&quot;; a set of current issues found in a codebase, which future runs of lint will silently ignore. Only new issues not found in the baseline are reported.&#xA;&#xA;Note that while opening files in the IDE, baseline issues are not filtered out; the purpose of baselines is to allow you to get started using lint and break the build on all newly introduced errors, without having to go back and fix the entire codebase up front. However, when you open up existing files you still want to be aware of and fix issues as you come across them.&#xA;&#xA;This issue type is used to emit two types of informational messages in reports: first, whether any issues were filtered out so you don&apos;t have a false sense of security if you forgot that you&apos;ve checked in a baseline file, and second, whether any issues in the baseline file appear to have been fixed such that you can stop filtering them out and get warned if the issues are re-introduced.">
        <location
            file="/home/felix/Desktop/dismoi/mobile_poc/android/app/lint-baseline.xml"/>
    </issue>

    <issue
        id="LintBaseline"
        severity="Information"
        message="3 errors and 2 warnings were filtered out because they are listed in the baseline file, lint-baseline.xml&#xA;"
        category="Lint"
        priority="10"
        summary="Baseline Issues"
        explanation="Lint can be configured with a &quot;baseline&quot;; a set of current issues found in a codebase, which future runs of lint will silently ignore. Only new issues not found in the baseline are reported.&#xA;&#xA;Note that while opening files in the IDE, baseline issues are not filtered out; the purpose of baselines is to allow you to get started using lint and break the build on all newly introduced errors, without having to go back and fix the entire codebase up front. However, when you open up existing files you still want to be aware of and fix issues as you come across them.&#xA;&#xA;This issue type is used to emit two types of informational messages in reports: first, whether any issues were filtered out so you don&apos;t have a false sense of security if you forgot that you&apos;ve checked in a baseline file, and second, whether any issues in the baseline file appear to have been fixed such that you can stop filtering them out and get warned if the issues are re-introduced.">
        <location
            file="/home/felix/Desktop/dismoi/mobile_poc/android/app/lint-baseline.xml"/>
    </issue>

    <issue
        id="LintError"
        severity="Error"
        message="Unknown issue id &quot;InlineApi&quot;"
        category="Lint"
        priority="10"
        summary="Lint Failure"
        explanation="This issue type represents a problem running lint itself. Examples include failure to find bytecode for source files (which means certain detectors could not be run), parsing errors in lint configuration files, etc.&#xA;&#xA;These errors are not errors in your own code, but they are shown to make it clear that some checks were not completed.">
        <location
            file="/home/felix/Desktop/dismoi/mobile_poc/android/app/build.gradle"
            line="170"
            column="22"/>
    </issue>

</issues>
